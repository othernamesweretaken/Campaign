{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Solidity\\\\Campaign\\\\pages\\\\campaigns\\\\new.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport factory from '../../contract/factory';\nimport Layout from '../../components/layout';\nimport { Router } from '../../routes';\nimport Web3 from 'web3'; // import web3 from '../../contract/web3';\n//import 'semantic-ui-css/semantic.min.css';\n\nlet accounts;\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimumContribution: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n\n      try {\n        this.setState({\n          loading: true,\n          errorMessage: ''\n        });\n        await window.ethereum.enable(); //Get Accounts doesnot work any more. Much time wasted here.\n\n        accounts = await web3.eth.accounts;\n        console.log(accounts);\n        await factory.methods.createCampaign(this.state.minimumContribution).send({\n          from: accounts[0]\n        });\n        this.setState({\n          loading: false\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          loading: false,\n          errorMessage: err.message\n        });\n      }\n    });\n  }\n\n  render() {\n    //error in form field used to handle the error on load. Error will only generate if there is a change in error message\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Create a new Campaign.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Minimum Contribution Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"wei\",\n            labelPosition: \"right\",\n            value: this.state.minimumContribution,\n            onChange: event => this.setState({\n              minimumContribution: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          error: true,\n          header: \"Oops!\",\n          content: this.state.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          loading: this.state.loading,\n          children: \"Create !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["D:/Solidity/Campaign/pages/campaigns/new.js"],"names":["React","Component","Form","Button","Input","Message","factory","Layout","Router","Web3","accounts","CampaignNew","minimumContribution","errorMessage","loading","event","preventDefault","setState","window","ethereum","enable","web3","eth","console","log","methods","createCampaign","state","send","from","pushRoute","err","message","render","onSubmit","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,OAA7B,QAA2C,mBAA3C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,MAAR,QAAqB,cAArB;AAEC,OAAOC,IAAP,MAAiB,MAAjB,C,CACD;AAEA;;AAEA,IAAIC,QAAJ;;AACA,MAAMC,WAAN,SAA0BV,SAA1B,CAAmC;AAAA;AAAA;;AAAA,mCASvB;AACJW,MAAAA,mBAAmB,EAAC,EADhB;AAEJC,MAAAA,YAAY,EAAC,EAFT;AAGJC,MAAAA,OAAO,EAAE;AAHL,KATuB;;AAAA,sCAepB,MAAOC,KAAP,IAAe;AACtBA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAG;AACH,aAAKC,QAAL,CAAc;AAACH,UAAAA,OAAO,EAAC,IAAT;AAAeD,UAAAA,YAAY,EAAC;AAA5B,SAAd;AACA,cAAMK,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN,CAFG,CAGX;;AACQV,QAAAA,QAAQ,GAAG,MAAMW,IAAI,CAACC,GAAL,CAASZ,QAA1B;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACA,cAAMJ,OAAO,CAACmB,OAAR,CAAgBC,cAAhB,CAA+B,KAAKC,KAAL,CAAWf,mBAA1C,EAA+DgB,IAA/D,CAAoE;AAACC,UAAAA,IAAI,EAAEnB,QAAQ,CAAC,CAAD;AAAf,SAApE,CAAN;AACA,aAAKO,QAAL,CAAc;AAACH,UAAAA,OAAO,EAAC;AAAT,SAAd;AACAN,QAAAA,MAAM,CAACsB,SAAP,CAAiB,GAAjB;AACC,OATD,CAUA,OAAMC,GAAN,EAAU;AACN,aAAKd,QAAL,CAAc;AAACH,UAAAA,OAAO,EAAE,KAAV;AAAgBD,UAAAA,YAAY,EAAEkB,GAAG,CAACC;AAAlC,SAAd;AACH;AAEJ,KA/B8B;AAAA;;AAiC/BC,EAAAA,MAAM,GAAE;AACZ;AACQ,wBACA,QAAC,MAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,QAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWd,YAAnD;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,KAAK,EAAC,KAAb;AAAmB,YAAA,aAAa,EAAC,OAAjC;AAAyC,YAAA,KAAK,EAAI,KAAKc,KAAL,CAAWf,mBAA7D;AACA,YAAA,QAAQ,EAAIG,KAAK,IAAI,KAAKE,QAAL,CAAc;AAACL,cAAAA,mBAAmB,EAAEG,KAAK,CAACoB,MAAN,CAAaC;AAAnC,aAAd;AADrB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,OAAD;AAAS,UAAA,KAAK,MAAd;AAAe,UAAA,MAAM,EAAC,OAAtB;AAA8B,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWd;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI,QAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAgB,UAAA,OAAO,EAAE,KAAKc,KAAL,CAAWb,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAmBH;;AAtD8B;;AA0DnC,eAAeH,WAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport {Form, Button, Input, Message} from 'semantic-ui-react';\r\nimport factory from '../../contract/factory';\r\nimport Layout from '../../components/layout';\r\nimport {Router} from '../../routes';\r\n\r\n import Web3 from 'web3';\r\n// import web3 from '../../contract/web3';\r\n\r\n//import 'semantic-ui-css/semantic.min.css';\r\n\r\nlet accounts;\r\nclass CampaignNew extends Component{\r\n\r\n    // async componentDidMount(){\r\n    //     web3 = new Web3(window.web3.currentProvider);\r\n    //     factory.setProvider(web3);\r\n    //     accounts = await web3.eth.getAccounts();\r\n    //     console.log(accounts);\r\n    // }\r\n\r\n    state = {\r\n        minimumContribution:'',\r\n        errorMessage:'',\r\n        loading: false\r\n    }\r\n\r\n    onSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        try{\r\n        this.setState({loading:true, errorMessage:''});\r\n        await window.ethereum.enable();\r\n//Get Accounts doesnot work any more. Much time wasted here.\r\n        accounts = await web3.eth.accounts;\r\n        console.log(accounts);\r\n        await factory.methods.createCampaign(this.state.minimumContribution).send({from: accounts[0]});  \r\n        this.setState({loading:false});\r\n        Router.pushRoute('/');  \r\n        }\r\n        catch(err){\r\n            this.setState({loading: false,errorMessage: err.message});\r\n        }\r\n       \r\n    };\r\n\r\n    render(){\r\n//error in form field used to handle the error on load. Error will only generate if there is a change in error message\r\n        return(\r\n        <Layout>\r\n            <div>\r\n            Create a new Campaign.\r\n            </div>\r\n\r\n            \r\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n                <Form.Field>\r\n                    <label>Minimum Contribution Amount</label>\r\n                    <Input label=\"wei\" labelPosition=\"right\" value = {this.state.minimumContribution} \r\n                    onChange = {event => this.setState({minimumContribution: event.target.value})}\r\n                    />\r\n                </Form.Field>\r\n                <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n                <Button primary loading={this.state.loading}>Create !</Button>\r\n            </Form>\r\n        </Layout>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CampaignNew;"]},"metadata":{},"sourceType":"module"}