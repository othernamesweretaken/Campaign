{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Router } from '../routes';\nimport React, { Component } from 'react';\nimport { Form, Input, Button, Message } from 'semantic-ui-react';\nimport Campaign from '../contract/campaign';\nimport web3 from '../contract/web3';\n\nclass ContributeForm1 extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      contributeAmount: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n\n      try {\n        this.setState({\n          loading: true,\n          errorMessage: ''\n        });\n        await window.ethereum.enable(); //getAccounts is deprecated.\n\n        const accounts = await window.web3.eth.accounts;\n        console.log(accounts);\n        const CampaignInstance = Campaign(this.props.address);\n        await CampaignInstance.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.contributeAmount)\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {\n        this.setState({\n          loading: false,\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        contributeAmount: ''\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsxs(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage,\n        children: [/*#__PURE__*/_jsxs(Form.Field, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"Amount to Contribute\"\n          }), /*#__PURE__*/_jsx(Input, {\n            label: \"ether\",\n            labelPosition: \"right\",\n            value: this.state.contributeAmount,\n            onChange: event => this.setState({\n              contributeAmount: event.target.value\n            })\n          })]\n        }), /*#__PURE__*/_jsx(Message, {\n          error: true,\n          header: \"Oops!\",\n          content: this.state.errorMessage\n        }), /*#__PURE__*/_jsx(Button, {\n          primary: true,\n          loading: this.state.loading,\n          children: \"Contribute!\"\n        })]\n      })\n    });\n  }\n\n}\n\nexport default ContributeForm1;","map":null,"metadata":{},"sourceType":"module"}